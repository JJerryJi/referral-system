apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: rabbitmq-{{.Release.Name}}
spec:
  serviceName: "rabbitmq"
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: "{{.Values.rabbitmq.registry}}/{{.Values.rabbitmq.repository}}:{{.Values.rabbitmq.tag}}"
          ports:
            - containerPort: 5672
            - containerPort: 15672  # Management UI
          env:
            - name: RABBITMQ_DEFAULT_USER
              value: "guest"
            - name: RABBITMQ_DEFAULT_PASS
              value: "guest"
          volumeMounts:
            - name: rabbitmq-data
              mountPath: /var/lib/rabbitmq # Common location for rabbitmd data
  volumeClaimTemplates:
    - metadata:
        name: rabbitmq-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-{{.Release.Name}}
spec:
  serviceName: redis
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: "{{ .Values.redis.registry }}/{{ .Values.redis.repository}}:{{ .Values.redis.tag}}"
        ports:
        - containerPort: 6379
        volumeMounts:
        - name: redis-data
          mountPath: /data
  volumeClaimTemplates: 
    - metadata:
        name: redis-data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
        storageClassName: gp2  

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-{{.Release.Name}}
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: "{{.Values.pg.registry}}/{{.Values.pg.repository}}:{{.Values.pg.tag}}"
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgres-config
          env:
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
    - metadata:
        name: postgres-storage
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
        storageClassName: {{.Values.storageClassName}}